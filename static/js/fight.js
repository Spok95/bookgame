const diceSound = new Audio('/static/music/dice-roll.mp3');
const dice = document.getElementById('dice');
const rollButton = document.getElementById('roll-button');
const battleLog = document.getElementById('battle-log');

const faces = [
    '/static/images/dice-1.png',
    '/static/images/dice-2.png',
    '/static/images/dice-3.png',
    '/static/images/dice-4.png',
    '/static/images/dice-5.png',
    '/static/images/dice-6.png'
];

const spins = [
    '/static/images/spin-1.png',
    '/static/images/spin-2.png',
    '/static/images/spin-3.png',
    '/static/images/spin-4.png',
    '/static/images/spin-5.png',
    '/static/images/spin-6.png',
    '/static/images/spin-7.png',
    '/static/images/spin-8.png',
    '/static/images/spin-9.png',
    '/static/images/spin-10.png',
    '/static/images/spin-11.png',
    '/static/images/spin-12.png',
    '/static/images/spin-13.png',
    '/static/images/spin-14.png',
    '/static/images/spin-15.png',
    '/static/images/spin-16.png'
];

async function startAttack() {
    if (!dice || !rollButton || !battleLog) return;

    rollButton.disabled = true;

    // üî• –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∑–≤—É–∫ –±—Ä–æ—Å–∫–∞
    diceSound.currentTime = 0;
    diceSound.play();

    let frame = 0;
    let totalFrames = 20;
    let delay = 20;
    let bounceAmplitude = 20; // –ù–∞—á–∞–ª—å–Ω–∞—è –∞–º–ø–ª–∏—Ç—É–¥–∞ –ø—Ä—ã–∂–∫–∞ (–≤ –ø–∏–∫—Å–µ–ª—è—Ö)

    // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è —Å –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ–º + –ø–æ–¥–ø—Ä—ã–≥–∏–≤–∞–Ω–∏–µ
    for (let i = 0; i < totalFrames; i++) {
        frame = (frame + 1) % spins.length;
        dice.src = spins[frame];

        // –ü—Ä—ã–∂–æ–∫ –≤–≤–µ—Ä—Ö –∏ –≤–Ω–∏–∑
        const direction = (i % 2 === 0) ? 1 : -1; // —á–µ—Ä–µ–¥—É–µ–º –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑
        dice.style.transform = `translateY(${direction * bounceAmplitude}px)`;

        await new Promise(resolve => setTimeout(resolve, delay));

        delay += 5;            // –ø–ª–∞–≤–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
        bounceAmplitude *= 0.9; // –∞–º–ø–ª–∏—Ç—É–¥–∞ –ø—Ä—ã–∂–∫–∞ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä
    }

    try {
        const response = await fetch('/attack', { method: 'POST' });
        const data = await response.json();

        const playerRoll = data.PlayerRoll;
        const enemyRoll = data.EnemyRoll;
        const resultText = data.Result;

        // –ü–æ–∫–∞–∑–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é –≥—Ä–∞–Ω—å –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
        dice.src = faces[playerRoll - 1];
        dice.style.transform = 'translateY(0)';

        // –û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥ –±–æ—è
        const logEntry = document.createElement('p');
        logEntry.textContent = `–í—ã: ${playerRoll} | –í—Ä–∞–≥: ${enemyRoll} ‚Üí ${resultText}`;
        battleLog.appendChild(logEntry);
        battleLog.scrollTop = battleLog.scrollHeight;

        if (data.BattleEnded) {
            const endMsg = document.createElement('p');
            endMsg.innerHTML = `<strong>–ë–æ–π –æ–∫–æ–Ω—á–µ–Ω!</strong>`;
            battleLog.appendChild(endMsg);
            rollButton.disabled = true;
        } else {
            rollButton.disabled = false;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∞—Ç–∞–∫–∏:', error);
        rollButton.disabled = false;
    }
}


