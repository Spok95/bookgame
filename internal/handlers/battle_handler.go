package handlers

//type AttackResult struct {
//	PlayerRoll  int    `json:"PlayerRoll"`
//	EnemyRoll   int    `json:"EnemyRoll"`
//	Result      string `json:"Result"`
//	BattleEnded bool   `json:"BattleEnded"`
//}
//
//var EnemyHP = 10
//
//func AttackHandler(w http.ResponseWriter, r *http.Request) {
//	if r.Method != http.MethodPost {
//		http.Error(w, "Method not allowed", http.StatusMethodNotAllowed)
//		return
//	}
//
//	playerRoll := rand.IntN(6) + 1
//	enemyRoll := rand.IntN(6) + 1
//
//	playerAttack := playerRoll + Player.Dex
//	enemyAttack := enemyRoll + 8
//
//	result := ""
//	battleEnded := false
//
//	if playerAttack > enemyAttack {
//		EnemyHP -= 2
//		result = "–í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É! (-2 HP)"
//	} else if playerAttack < enemyAttack {
//		Player.Strength -= 2
//		result = "–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–∞–Ω–µ—Å –≤–∞–º —É—Ä–æ–Ω! (-2 HP)"
//	} else {
//		result = "–ü–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ, –±–µ–∑ —É—Ä–æ–Ω–∞."
//	}
//
//	if EnemyHP <= 0 {
//		result += " üéâ –ü–æ–±–µ–¥–∞!"
//		battleEnded = true
//	} else if Player.Strength <= 0 {
//		result += " ‚ò†Ô∏è –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!"
//		battleEnded = true
//	}
//
//	// (–ü–æ–∫–∞ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—ã—á–∏—Ç–∞–Ω–∏—è –°–ò–õ–´ ‚Äî –¥–æ–±–∞–≤–∏–º –ø–æ–∑–∂–µ.)
//	w.Header().Set("Content-Type", "application/json")
//	json.NewEncoder(w).Encode(AttackResult{
//		PlayerRoll:  playerRoll,
//		EnemyRoll:   enemyRoll,
//		Result:      result,
//		BattleEnded: battleEnded,
//	})
//}
